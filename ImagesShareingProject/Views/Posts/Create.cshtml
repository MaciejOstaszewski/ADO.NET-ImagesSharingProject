@model ImagesShareingProject.Models.Post

@{
    ViewBag.Title = "Create";
}

<h2>New Post</h2>
@if (Request["message"] != null)
{
    <h2 style="color: lightpink;">@Request["message"]</h2>
}

@using (Html.BeginForm("Create", "Posts", FormMethod.Post, new { enctype = "multipart/form-data", id = "postForm", name = "Form" }))
{
    @Html.AntiForgeryToken()



    <div class="form-horizontal">
        <hr />
        <h3>Image From:</h3>
        <div class="form-group">
            <label class="control-label col-md-2" for="imageType1">URL</label>
            <div class="col-md-10">
                <input class="form-check-input" onclick="showURL()" id="imageType1" type="radio" name="imgType" value="1" checked />
            </div>


        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="imageType2">Disc</label>
            <div class="col-md-10">


                <input class="form-check-input" id="imageType2" onclick="showDISC()" type="radio" name="imgType" value="2" />
            </div>


        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>



        @*<div class="form-group" id="url" style="display: none;">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="text-danger" style="display: none;">
                        <span for="Image">Image is required</span>
                    </span>
                       @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group" id="url" style="display: block;">
            <label class="control-label col-md-2" for="URLImage">Image URL address</label>
            <div class="col-md-10">
                <input id="URLImage" class="form-control" type="text" name="image" />

            </div>
        </div>
        <div class="form-group" id="disc" style="display: none;">
            <label class="control-label col-md-2" for="DiscImage">Select Image from disc</label>
            <div class="col-md-10">
                <input id="DiscImage" class="form-control" type="file" name="image" value="" />
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <select multiple name="tags" class="form-control">
                    @foreach (var tag in ViewData["tags"] as System.Collections.Generic.List<ImagesShareingProject.Models.Tag>)
                    {
                        <option value="@Html.DisplayFor(modelItem => tag.ID)">@Html.DisplayFor(modelItem => tag.Name)</option>
                    }

                </select>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" onclick="return validateForm();" class="btn btn-default" />
            </div>
        </div>



    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">


    function showURL() {
        var URLdiv = document.getElementById('url');
        var DISCdiv = document.getElementById('disc');
        URLdiv.style.display = "block";
        DISCdiv.style.display = "none";




    }
    function showDISC() {
        var URLdiv = document.getElementById('url');
        var DISCdiv = document.getElementById('disc');
        DISCdiv.style.display = "block";
        URLdiv.style.display = "none";


    }


</script>